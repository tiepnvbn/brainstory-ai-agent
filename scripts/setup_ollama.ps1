#!/usr/bin/env pwsh

# Script thi·∫øt l·∫≠p Ollama v·ªõi model nh·∫π cho BrainStory AI Agent

Write-Host "üß† BrainStory AI Agent - Ollama Setup" -ForegroundColor Green
Write-Host "=====================================" -ForegroundColor Green

# Ki·ªÉm tra Ollama ƒë√£ c√†i ch∆∞a
Write-Host "1. Ki·ªÉm tra Ollama..." -ForegroundColor Yellow
try {
    $version = ollama --version
    Write-Host "‚úÖ Ollama ƒë√£ c√†i ƒë·∫∑t: $version" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Ollama ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t!" -ForegroundColor Red
    Write-Host "Vui l√≤ng t·∫£i t·ª´: https://ollama.ai/download" -ForegroundColor Yellow
    Write-Host "Sau khi c√†i xong, ch·∫°y l·∫°i script n√†y." -ForegroundColor Yellow
    exit 1
}

# Danh s√°ch model nh·∫π theo th·ª© t·ª± ∆∞u ti√™n
$models = @(
    @{name="qwen2:1.5b"; size="0.9GB"; desc="Nh·∫π nh·∫•t, hi·ªáu qu·∫£"},
    @{name="llama3.2:1b"; size="1.3GB"; desc="Meta, r·∫•t nh·∫π"},
    @{name="gemma2:2b"; size="1.6GB"; desc="Google, c√¢n b·∫±ng"},
    @{name="phi3:mini"; size="2.3GB"; desc="Microsoft, t·ªëi ∆∞u"}
)

Write-Host "`n2. T·∫£i model AI..." -ForegroundColor Yellow
Write-Host "Ch·ªçn model ƒë·ªÉ t·∫£i (khuy·∫øn ngh·ªã b·∫Øt ƒë·∫ßu v·ªõi model nh·∫π nh·∫•t):"

for ($i = 0; $i -lt $models.Count; $i++) {
    $model = $models[$i]
    Write-Host "$($i+1). $($model.name) - $($model.size) - $($model.desc)" -ForegroundColor Cyan
}

do {
    $choice = Read-Host "`nNh·∫≠p s·ªë (1-$($models.Count)) ho·∫∑c 'all' ƒë·ªÉ t·∫£i t·∫•t c·∫£"
    
    if ($choice -eq "all") {
        foreach ($model in $models) {
            Write-Host "`nüì• ƒêang t·∫£i $($model.name)..." -ForegroundColor Yellow
            try {
                ollama pull $model.name
                Write-Host "‚úÖ T·∫£i th√†nh c√¥ng $($model.name)" -ForegroundColor Green
            } catch {
                Write-Host "‚ùå L·ªói khi t·∫£i $($model.name): $($_.Exception.Message)" -ForegroundColor Red
            }
        }
        break
    } elseif ([int]$choice -ge 1 -and [int]$choice -le $models.Count) {
        $selectedModel = $models[[int]$choice - 1]
        Write-Host "`nüì• ƒêang t·∫£i $($selectedModel.name)..." -ForegroundColor Yellow
        try {
            ollama pull $selectedModel.name
            Write-Host "‚úÖ T·∫£i th√†nh c√¥ng $($selectedModel.name)" -ForegroundColor Green
        } catch {
            Write-Host "‚ùå L·ªói khi t·∫£i $($selectedModel.name): $($_.Exception.Message)" -ForegroundColor Red
        }
        break
    } else {
        Write-Host "L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!" -ForegroundColor Red
    }
} while ($true)

# Ki·ªÉm tra model ƒë√£ t·∫£i
Write-Host "`n3. Ki·ªÉm tra model ƒë√£ t·∫£i..." -ForegroundColor Yellow
try {
    $installedModels = ollama list
    Write-Host "‚úÖ Model ƒë√£ c√†i ƒë·∫∑t:" -ForegroundColor Green
    Write-Host $installedModels
} catch {
    Write-Host "‚ùå Kh√¥ng th·ªÉ ki·ªÉm tra model ƒë√£ c√†i" -ForegroundColor Red
}

Write-Host "`nüéâ Ho√†n t·∫•t! B√¢y gi·ªù b·∫°n c√≥ th·ªÉ ch·∫°y BrainStory AI Agent" -ForegroundColor Green
Write-Host "Ch·∫°y: streamlit run app/main.py" -ForegroundColor Cyan
